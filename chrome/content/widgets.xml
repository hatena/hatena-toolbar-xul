<?xml version="1.0" encoding="utf-8"?>
<bindings xmlns="http://www.mozilla.org/xbl"
          xmlns:xbl="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

    <binding id="command-link"
             extends="chrome://global/content/bindings/text.xml#text-link">
        <implementation>
            <constructor><![CDATA[
                this.href = '';
            ]]></constructor>

            <property name="accessibleType" readonly="true"
                      onget="return Components.interfaces.nsIAccessibleProvider.XULButton"/>

            <method name="open">
                <parameter name="event"/>
                <body><![CDATA[
                    if (!this.hasAttribute('oncommand')) return;
                    let onCommand = new Function('event', this.getAttribute('oncommand'));
                    onCommand.call(this, event);
                ]]></body>
            </method>
        </implementation>
    </binding>

    <binding id="sidelabel-toolbarbutton"
             extends="chrome://global/content/bindings/toolbarbutton.xml#toolbarbutton">
        <content>
            <children includes="observes|template|menupopup|tooltip"/>
            <xul:hbox class="toolbarbutton-icon"
                      align="center"
                      xbl:inherits="toolbarmode,buttonstyle">
                <xul:image class="toolbarbutton-icon"
                           xbl:inherits="validate,src=image,toolbarmode,buttonstyle"/>
                <xul:label class="toolbarbutton-sidetext"
                           xbl:inherits="value=sidelabel"/>
            </xul:hbox>
            <xul:label class="toolbarbutton-text"
                       crop="right"
                       flex="1"
                       xbl:inherits="value=label,accesskey,crop,toolbarmode,buttonstyle"/>
        </content>

        <implementation>
            <property name="sideLabel"
                      onget="return this.getAttribute('sidelabel');"
                      onset="this.setAttribute('sidelabel', val); return val;"/>
        </implementation>
    </binding>

    <binding id="menu-autocomplete-popup"
             extends="chrome://global/content/bindings/autocomplete.xml#autocomplete-result-popup">
        <content ignorekeys="true" tooltiptext="">
            <xul:tree anonid="tree" class="autocomplete-tree plain"
                      hidecolumnpicker="true" flex="1" seltype="single">
                <xul:treecols anonid="treecols">
                    <xul:treecol id="treecolAutoCompleteValue"
                                 class="autocomplete-treecol"
                                 flex="1" overflow="true"/>
                </xul:treecols>
                <xul:treechildren class="autocomplete-treebody"/>
            </xul:tree>
            <xul:vbox>
                <children/>
            </xul:vbox>
        </content>
    </binding>

</bindings>
